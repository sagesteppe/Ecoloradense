f <- f[ 1:length(f) != grep('Koeleria_macrantha-CB-GB.tif', f) ]
Zones <- provisionalSTZ[unlist(st_intersects(
st_transform(hitch, st_crs(provisionalSTZ)), provisionalSTZ)), ] |>
pull(Zone)
hitch <- mutate(hitch, Zone = Zones, .before = 'geometry')
rm(Zones, n_empirical, f, p2rasts)
hitch <- left_join(hitch,
select(priorities, NRCS_Plants, STZones, Priority),
by = c('NRCS_Plants', 'Zone' = 'STZones')) |>
relocate(Priority, .before = 'geometry')
rm(priorities)
allotments <- allotments[
unlist(st_intersects(st_transform(hitch, st_crs(allotments)), allotments)), ] |>
pull(ALLOT_NAME)
hitch <- mutate(hitch, Allotment = allotments, .before = geometry)
View(hitch)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(flextable)
# one of 'Price', 'GrandJunction', 'Uncompahgre', 'Vernal'
crew <- c('Uncompahgre')
crew_reg <- if(crew %in% c('GrandJunction', 'Uncompahgre')){
crew_reg <- 'Colorado'} else {crew_reg <- crew}
# date of hitch start.
date <- '7.8.24'
hitch <- readxl::read_xlsx(
paste0('../data/provisional_plans/', crew, '_', date, '.xlsx')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
fill(Date, .direction = 'down') |>
mutate(Activity = replace_na(Activity, 'Scouting'))
historic <- read.csv(
paste0('../data/PreviousCollections-', crew_reg, '.csv')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
select(Coll.Ref.Num, Date.Collected.1, NRCS.Plant.Code, Plant.Name) |>
mutate(NRCS.Plant.Code = str_trim(NRCS.Plant.Code))
#scouting <- read.csv('../data/CurrentYearScouting.csv') |>
#  st_as_sf(coords = c(x = 'LONGITUDE_DECIMAL', y = 'LATITUDE_DECIMAL'), crs = 4326) |>
#  select(COLL_ID, NRCS.Plant.Code = ABBREV_NAME, futurePotential)
priorities <- read.csv('../data/CP_SpeciesPriorities.csv') |>
mutate(STZ_Number = str_remove(str_squish(STZ_Number), ' '))
n <- max(str_count(priorities$STZ_Number, ",") + 1)
priorities <- separate_wider_delim(
priorities, STZ_Number, ',',
names = paste0("Z", seq_len(n)), too_few = 'align_start') |>
pivot_longer(starts_with('Z'), values_to = 'STZones') |>
select(-name) |>
drop_na(STZones) |>
mutate(STZones = as.numeric(STZones))
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(flextable)
# one of 'Price', 'GrandJunction', 'Uncompahgre', 'Vernal'
crew <- c('Uncompahgre')
crew_reg <- if(crew %in% c('GrandJunction', 'Uncompahgre')){
crew_reg <- 'Colorado'} else {crew_reg <- crew}
# date of hitch start.
date <- '7.8.24'
hitch <- readxl::read_xlsx(
paste0('../data/provisional_plans/', crew, '_', date, '.xlsx')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
fill(Date, .direction = 'down') |>
mutate(Activity = replace_na(Activity, 'Scouting'))
historic <- read.csv(
paste0('../data/PreviousCollections-', crew_reg, '.csv')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
select(Coll.Ref.Num, Date.Collected.1, NRCS.Plant.Code, Plant.Name) |>
mutate(NRCS.Plant.Code = str_trim(NRCS.Plant.Code))
#scouting <- read.csv('../data/CurrentYearScouting.csv') |>
#  st_as_sf(coords = c(x = 'LONGITUDE_DECIMAL', y = 'LATITUDE_DECIMAL'), crs = 4326) |>
#  select(COLL_ID, NRCS.Plant.Code = ABBREV_NAME, futurePotential)
priorities <- read.csv('../data/CP_SpeciesPriorities.csv') |>
mutate(STZ_Number = str_remove(str_squish(STZ_Number), ' '))
n <- max(str_count(priorities$STZ_Number, ",") + 1)
priorities <- separate_wider_delim(
priorities, STZ_Number, ',',
names = paste0("Z", seq_len(n)), too_few = 'align_start') |>
pivot_longer(starts_with('Z'), values_to = 'STZones') |>
select(-name) |>
drop_na(STZones) |>
mutate(STZones = as.numeric(STZones))
provisionalSTZ <- st_read(
'../data/DesertSW/desert_southwest_provisional_seed_transfer_zones_USGS.shp', quiet = T) |>
select(Zone) |>
st_make_valid()
allotments <- st_read(
'../data/BLMAllotments/BLM_Natl_Grazing_Allotment_Polygons.shp', quiet = T
) |>
select(Allotment = ALLOT_NAME) |>
st_make_valid()
rm(n)
## provisional join to determine which species may need empirical STZs used ##
n_empirical <- left_join(hitch, priorities, by = 'NRCS_Plants', relationship = 'many-to-many') |>
filter(STZ == 'Species') |>
nrow() # determine how many species have empirical seed zones
## Determine which STZ's the value are in ##
p2rasts <- '/media/steppe/hdd/EmpiricalSeedZones/data/geodata/rasters'
f <- list.files(p2rasts, pattern = 'tif$')
f <- f[ 1:length(f) != grep('Koeleria_macrantha-CB-GB.tif', f) ]
Zones <- provisionalSTZ[unlist(st_intersects(
st_transform(hitch, st_crs(provisionalSTZ)), provisionalSTZ)), ] |>
pull(Zone)
hitch <- mutate(hitch, Zone = Zones, .before = 'geometry')
View(hitch)
rm(Zones, n_empirical, f, p2rasts)
hitch <- left_join(hitch,
select(priorities, NRCS_Plants, STZones, Priority),
by = c('NRCS_Plants', 'Zone' = 'STZones')) |>
relocate(Priority, .before = 'geometry')
rm(priorities)
st_difference(st_transform(hitch, st_crs(allotments)), allotments)
source('functions.R')
st_difference(st_transform(hitch, st_crs(allotments)), allotments)
st_difference(allotments, st_union(st_geometry(hitch)))
st_difference(st_transform(hitch, st_crs(allotments)), st_union(st_geometry(hitch)))
st_difference(st_transform(hitch, st_crs(allotments)), st_union(st_geometry(hitch)))
st_difference(st_transform(hitch, st_crs(allotments)), st_union(hitch))
st_difference(st_transform(hitch, st_crs(allotments)), st_union(allotments))
View(hitch)
hitch1 <- st_intersection(st_transform(hitch, st_crs(allotments)), allotments)
View(hitch1)
st_difference(st_transform(hitch1, st_crs(allotments)), st_union(allotments))
allotments <- st_read(
'../data/BLMAllotments/BLM_Natl_Grazing_Allotment_Polygons.shp', quiet = T
) |>
select(Allotment = ALLOT_NAME) |>
st_make_valid()
st_difference(st_transform(hitch1, st_crs(allotments)), st_union(allotments))
st_difference(st_transform(hitch1, st_crs(allotments)),
st_make_valid(st_union(allotments)))
hitch1 <- st_join(st_transform(hitch, st_crs(allotments)), allotments)
View(hitch1)
hitch <- st_join(st_transform(hitch, st_crs(allotments)), allotments) |>
relocate(Allotment = .before = geometry)
hitch <- st_join(st_transform(hitch, st_crs(allotments)), allotments) |>
relocate(Allotment, .before = geometry)
View(hitch)
priorities <- separate_wider_delim(
priorities, STZ_Number, ',',
names = paste0("Z", seq_len(n)), too_few = 'align_start') |>
pivot_longer(starts_with('Z'), values_to = 'STZones') |>
select(-name) |>
drop_na(STZones) |>
mutate(STZones = as.numeric(STZones))
priorities <- read.csv('../data/CP_SpeciesPriorities.csv') |>
mutate(STZ_Number = str_remove(str_squish(STZ_Number), ' '))
View(priorities)
source('functions.R')
View(nearest_collections)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(flextable)
source('functions.R')
# one of 'Price', 'GrandJunction', 'Uncompahgre', 'Vernal'
crew <- c('Uncompahgre')
crew_reg <- if(crew %in% c('GrandJunction', 'Uncompahgre')){
crew_reg <- 'Colorado'} else {crew_reg <- crew}
# date of hitch start.
date <- '7.8.24'
hitch <- readxl::read_xlsx(
paste0('../data/provisional_plans/', crew, '_', date, '.xlsx')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
fill(Date, .direction = 'down') |>
mutate(Activity = replace_na(Activity, 'Scouting'))
historic <- read.csv(
paste0('../data/PreviousCollections-', crew_reg, '.csv')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
select(Coll.Ref.Num, Date.Collected.1, NRCS.Plant.Code, Plant.Name) |>
mutate(NRCS.Plant.Code = str_trim(NRCS.Plant.Code))
#scouting <- read.csv('../data/CurrentYearScouting.csv') |>
#  st_as_sf(coords = c(x = 'LONGITUDE_DECIMAL', y = 'LATITUDE_DECIMAL'), crs = 4326) |>
#  select(COLL_ID, NRCS.Plant.Code = ABBREV_NAME, futurePotential)
priorities <- read.csv('../data/CP_SpeciesPriorities.csv') |>
mutate(STZ_Number = str_remove(str_squish(STZ_Number), ' '))
n <- max(str_count(priorities$STZ_Number, ",") + 1)
priorities <- separate_wider_delim(
priorities, STZ_Number, ',',
names = paste0("Z", seq_len(n)), too_few = 'align_start') |>
pivot_longer(starts_with('Z'), values_to = 'STZones') |>
select(-name) |>
drop_na(STZones) |>
mutate(STZones = as.numeric(STZones))
provisionalSTZ <- st_read(
'../data/DesertSW/desert_southwest_provisional_seed_transfer_zones_USGS.shp', quiet = T) |>
select(Zone) |>
st_make_valid()
allotments <- st_read(
'../data/BLMAllotments/BLM_Natl_Grazing_Allotment_Polygons.shp', quiet = T
) |>
select(Allotment = ALLOT_NAME) |>
st_make_valid()
rm(n)
## provisional join to determine which species may need empirical STZs used ##
n_empirical <- left_join(hitch, priorities, by = 'NRCS_Plants', relationship = 'many-to-many') |>
filter(STZ == 'Species') |>
nrow() # determine how many species have empirical seed zones
## Determine which STZ's the value are in ##
p2rasts <- '/media/steppe/hdd/EmpiricalSeedZones/data/geodata/rasters'
f <- list.files(p2rasts, pattern = 'tif$')
f <- f[ 1:length(f) != grep('Koeleria_macrantha-CB-GB.tif', f) ]
Zones <- provisionalSTZ[unlist(st_intersects(
st_transform(hitch, st_crs(provisionalSTZ)), provisionalSTZ)), ] |>
pull(Zone)
hitch <- mutate(hitch, Zone = Zones, .before = 'geometry')
rm(Zones, n_empirical, f, p2rasts)
## Add the priorities to the Species ##
hitch <- left_join(hitch,
select(priorities, NRCS_Plants, STZones, Priority),
by = c('NRCS_Plants', 'Zone' = 'STZones')) |>
relocate(Priority, .before = 'geometry')
rm(priorities)
## add the allotment name to the population
hitch <- st_join(st_transform(hitch, st_crs(allotments)), allotments) |>
relocate(Allotment, .before = geometry)
rm(allotments)
## Determine whether this species has been collected in the field office before ##
# match the hitch plan for the population with the historic data for the species
hist_coll_tab <- filter(historic, NRCS.Plant.Code %in% hitch$NRCS_Plants)
hist_stz <- unlist(st_intersects(
st_transform(hist_coll_tab, st_crs(provisionalSTZ)), provisionalSTZ))
hist_coll_tab <- hist_coll_tab %>%
mutate(STZ = hist_stz, .before = 'geometry')
hitch <- nearest_collections(x = hitch, y = hist_coll_tab)
View(hist_coll_tab)
View(hitch)
st_crs(hitch)
hitch <- st_join(st_transform(hitch, st_crs(allotments)), allotments) |>
relocate(Allotment, .before = geometry) |>
st_transform(4326)
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(flextable)
source('functions.R')
# one of 'Price', 'GrandJunction', 'Uncompahgre', 'Vernal'
crew <- c('Uncompahgre')
crew_reg <- if(crew %in% c('GrandJunction', 'Uncompahgre')){
crew_reg <- 'Colorado'} else {crew_reg <- crew}
# date of hitch start.
date <- '7.8.24'
hitch <- readxl::read_xlsx(
paste0('../data/provisional_plans/', crew, '_', date, '.xlsx')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
fill(Date, .direction = 'down') |>
mutate(Activity = replace_na(Activity, 'Scouting'))
historic <- read.csv(
paste0('../data/PreviousCollections-', crew_reg, '.csv')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
select(Coll.Ref.Num, Date.Collected.1, NRCS.Plant.Code, Plant.Name) |>
mutate(NRCS.Plant.Code = str_trim(NRCS.Plant.Code))
#scouting <- read.csv('../data/CurrentYearScouting.csv') |>
#  st_as_sf(coords = c(x = 'LONGITUDE_DECIMAL', y = 'LATITUDE_DECIMAL'), crs = 4326) |>
#  select(COLL_ID, NRCS.Plant.Code = ABBREV_NAME, futurePotential)
priorities <- read.csv('../data/CP_SpeciesPriorities.csv') |>
mutate(STZ_Number = str_remove(str_squish(STZ_Number), ' '))
n <- max(str_count(priorities$STZ_Number, ",") + 1)
priorities <- separate_wider_delim(
priorities, STZ_Number, ',',
names = paste0("Z", seq_len(n)), too_few = 'align_start') |>
pivot_longer(starts_with('Z'), values_to = 'STZones') |>
select(-name) |>
drop_na(STZones) |>
mutate(STZones = as.numeric(STZones))
provisionalSTZ <- st_read(
'../data/DesertSW/desert_southwest_provisional_seed_transfer_zones_USGS.shp', quiet = T) |>
select(Zone) |>
st_make_valid()
allotments <- st_read(
'../data/BLMAllotments/BLM_Natl_Grazing_Allotment_Polygons.shp', quiet = T
) |>
select(Allotment = ALLOT_NAME) |>
st_make_valid()
rm(n)
## provisional join to determine which species may need empirical STZs used ##
n_empirical <- left_join(hitch, priorities, by = 'NRCS_Plants', relationship = 'many-to-many') |>
filter(STZ == 'Species') |>
nrow() # determine how many species have empirical seed zones
## Determine which STZ's the value are in ##
p2rasts <- '/media/steppe/hdd/EmpiricalSeedZones/data/geodata/rasters'
f <- list.files(p2rasts, pattern = 'tif$')
f <- f[ 1:length(f) != grep('Koeleria_macrantha-CB-GB.tif', f) ]
Zones <- provisionalSTZ[unlist(st_intersects(
st_transform(hitch, st_crs(provisionalSTZ)), provisionalSTZ)), ] |>
pull(Zone)
hitch <- mutate(hitch, Zone = Zones, .before = 'geometry')
rm(Zones, n_empirical, f, p2rasts)
## Add the priorities to the Species ##
hitch <- left_join(hitch,
select(priorities, NRCS_Plants, STZones, Priority),
by = c('NRCS_Plants', 'Zone' = 'STZones')) |>
relocate(Priority, .before = 'geometry')
rm(priorities)
## add the allotment name to the population
hitch <- st_join(st_transform(hitch, st_crs(allotments)), allotments) |>
relocate(Allotment, .before = geometry) |>
st_transform(4326)
rm(allotments)
## Determine whether this species has been collected in the field office before ##
# match the hitch plan for the population with the historic data for the species
hist_coll_tab <- filter(historic, NRCS.Plant.Code %in% hitch$NRCS_Plants)
hist_stz <- unlist(st_intersects(
st_transform(hist_coll_tab, st_crs(provisionalSTZ)), provisionalSTZ))
hist_coll_tab <- hist_coll_tab %>%
mutate(STZ = hist_stz, .before = 'geometry')
hitch <- nearest_collections(x = hitch, y = hist_coll_tab)
rm(hist_stz)
hitch <- hitch |>
mutate(
Lat = round(sf::st_coordinates(hitch)[,2], 4),
Long = round(sf::st_coordinates(hitch)[,1], 4),
Date = as.Date(gsub("\\.","\\/", Date),"%m/%d/%y"),
Day = weekdays(Date, abbreviate = T),
Coordinates = paste0(Lat, ', ',  Long), .before = Date) |>
st_drop_geometry() |>
arrange(Day) |>
rowwise()|>
select(-Date, -Lat, -Long, NRCS = NRCS_Plants) |>
relocate(Coords, .after = 'Distance_(km)')
hitch <- hitch |>
mutate(
Lat = round(sf::st_coordinates(hitch)[,2], 4),
Long = round(sf::st_coordinates(hitch)[,1], 4),
Date = as.Date(gsub("\\.","\\/", Date),"%m/%d/%y"),
Day = weekdays(Date, abbreviate = T),
Coordinates = paste0(Lat, ', ',  Long), .before = Date) |>
st_drop_geometry() |>
arrange(Day) |>
rowwise()|>
select(-Date, -Lat, -Long, NRCS = NRCS_Plants) #|>
View(hitch)
hitch <- hitch |>
mutate(
Lat = round(sf::st_coordinates(hitch)[,2], 4),
Long = round(sf::st_coordinates(hitch)[,1], 4),
Date = as.Date(gsub("\\.","\\/", Date),"%m/%d/%y"),
Day = weekdays(Date, abbreviate = T),
Coordinates = paste0(Lat, ', ',  Long), .before = Date) |>
st_drop_geometry() |>
arrange(Day) |>
rowwise()|>
select(-Date, -Lat, -Long, NRCS = NRCS_Plants) |>
relocate(Coordinates, .after = 'Distance_(km)')
hitch <- nearest_collections(x = hitch, y = hist_coll_tab) |>
st_as_sf()
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(tidyverse)
library(sf)
library(flextable)
source('functions.R')
# one of 'Price', 'GrandJunction', 'Uncompahgre', 'Vernal'
crew <- c('Uncompahgre')
crew_reg <- if(crew %in% c('GrandJunction', 'Uncompahgre')){
crew_reg <- 'Colorado'} else {crew_reg <- crew}
# date of hitch start.
date <- '7.8.24'
hitch <- readxl::read_xlsx(
paste0('../data/provisional_plans/', crew, '_', date, '.xlsx')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
fill(Date, .direction = 'down') |>
mutate(Activity = replace_na(Activity, 'Scouting'))
historic <- read.csv(
paste0('../data/PreviousCollections-', crew_reg, '.csv')) |>
st_as_sf(coords = c(x = 'Longitude', y = 'Latitude'), crs = 4326) |>
select(Coll.Ref.Num, Date.Collected.1, NRCS.Plant.Code, Plant.Name) |>
mutate(NRCS.Plant.Code = str_trim(NRCS.Plant.Code))
#scouting <- read.csv('../data/CurrentYearScouting.csv') |>
#  st_as_sf(coords = c(x = 'LONGITUDE_DECIMAL', y = 'LATITUDE_DECIMAL'), crs = 4326) |>
#  select(COLL_ID, NRCS.Plant.Code = ABBREV_NAME, futurePotential)
priorities <- read.csv('../data/CP_SpeciesPriorities.csv') |>
mutate(STZ_Number = str_remove(str_squish(STZ_Number), ' '))
n <- max(str_count(priorities$STZ_Number, ",") + 1)
priorities <- separate_wider_delim(
priorities, STZ_Number, ',',
names = paste0("Z", seq_len(n)), too_few = 'align_start') |>
pivot_longer(starts_with('Z'), values_to = 'STZones') |>
select(-name) |>
drop_na(STZones) |>
mutate(STZones = as.numeric(STZones))
provisionalSTZ <- st_read(
'../data/DesertSW/desert_southwest_provisional_seed_transfer_zones_USGS.shp', quiet = T) |>
select(Zone) |>
st_make_valid()
allotments <- st_read(
'../data/BLMAllotments/BLM_Natl_Grazing_Allotment_Polygons.shp', quiet = T
) |>
select(Allotment = ALLOT_NAME) |>
st_make_valid()
rm(n)
## provisional join to determine which species may need empirical STZs used ##
n_empirical <- left_join(hitch, priorities, by = 'NRCS_Plants', relationship = 'many-to-many') |>
filter(STZ == 'Species') |>
nrow() # determine how many species have empirical seed zones
## Determine which STZ's the value are in ##
p2rasts <- '/media/steppe/hdd/EmpiricalSeedZones/data/geodata/rasters'
f <- list.files(p2rasts, pattern = 'tif$')
f <- f[ 1:length(f) != grep('Koeleria_macrantha-CB-GB.tif', f) ]
Zones <- provisionalSTZ[unlist(st_intersects(
st_transform(hitch, st_crs(provisionalSTZ)), provisionalSTZ)), ] |>
pull(Zone)
hitch <- mutate(hitch, Zone = Zones, .before = 'geometry')
rm(Zones, n_empirical, f, p2rasts)
## Add the priorities to the Species ##
hitch <- left_join(hitch,
select(priorities, NRCS_Plants, STZones, Priority),
by = c('NRCS_Plants', 'Zone' = 'STZones')) |>
relocate(Priority, .before = 'geometry')
rm(priorities)
## add the allotment name to the population
hitch <- st_join(st_transform(hitch, st_crs(allotments)), allotments) |>
relocate(Allotment, .before = geometry) |>
st_transform(4326)
rm(allotments)
## Determine whether this species has been collected in the field office before ##
# match the hitch plan for the population with the historic data for the species
hist_coll_tab <- filter(historic, NRCS.Plant.Code %in% hitch$NRCS_Plants)
hist_stz <- unlist(st_intersects(
st_transform(hist_coll_tab, st_crs(provisionalSTZ)), provisionalSTZ))
hist_coll_tab <- hist_coll_tab %>%
mutate(STZ = hist_stz, .before = 'geometry')
hitch <- nearest_collections(x = hitch, y = hist_coll_tab) |>
st_as_sf()
rm(hist_stz)
hitch1 <- hitch |>
mutate(
Lat = round(sf::st_coordinates(.)[,2], 4),
Long = round(sf::st_coordinates(.)[,1], 4),
Date = as.Date(gsub("\\.","\\/", Date),"%m/%d/%y"),
Day = weekdays(Date, abbreviate = T),
Coordinates = paste0(Lat, ', ',  Long), .before = Date) |>
st_drop_geometry() |>
arrange(Day) |>
rowwise()|>
select(-Date, -Lat, -Long, NRCS = NRCS_Plants) |>
relocate(Coordinates, .after = 'Distance_(km)')
hitch1 <- hitch |>
mutate(
Lat = round(sf::st_coordinates(hitch)[,2], 4),
Long = round(sf::st_coordinates(hitch)[,1], 4),
Date = as.Date(gsub("\\.","\\/", Date),"%m/%d/%y"),
Day = weekdays(Date, abbreviate = T),
Coordinates = paste0(Lat, ', ',  Long), .before = Date) |>
st_drop_geometry() |>
arrange(Day) |>
rowwise()|>
select(-Date, -Lat, -Long, NRCS = NRCS_Plants) |>
relocate(Coordinates, .after = 'Distance_(km)')
View(hitch1)
flextable(hitch) |>
set_caption('Current Hitch Plan') |>
autofit() |>
fit_to_width(6.5) |>
footnote(i = 1, j = 6,
value = as_paragraph(
"Distance is 'as the crow flies' to the nearest collection under the current collecter code."))
flextable(hitch) |>
set_caption('Current Hitch Plan') |>
autofit() |>
fit_to_width(6.5) |>
footnote(i = 1, j = 7,
value = as_paragraph(
"Distance is 'as the crow flies' to the nearest collection under the current collecter code."))
flextable(hitch1) |>
set_caption('Current Hitch Plan') |>
autofit() |>
fit_to_width(6.5) |>
footnote(i = 1, j = 7,
value = as_paragraph(
"Distance is 'as the crow flies' to the nearest collection under the current collecter code."))
library(tidyverse)
library(sf)
library(terra)
setwd('/media/steppe/hdd/EriogonumColoradenseTaxonomy/scripts')
# first we will create a domain for all analysis. The 'closest' this bounding box is to a known
# occurrence is 10 miles. The furthest distances vary.
domain <- sf::st_read('../data/collections/occurrences_coloradense/occurrences.shp', quiet = T) %>%
st_union() %>%
st_transform(32613) %>%
st_buffer(16093) %>%
st_transform(4326) %>%
vect()
ext(domain)
template <- rast(project(domain, 'EPSG:32613'), nrows = 5, ncols = 5)
# now we will assemble single DEM tifs which cover our domain
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
if(str_detect(x, 'tif$')){demIN <- x} else{
demIN <- terra::mosaic(terra::sprc(file.path(x, list.files(x, 'tif$'))))
}
dir.create(p)
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_aspect(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'slope.tif'))
whitebox::wbt_ruggedness_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
whitebox::wbt_downslope_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_maximal_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/raw/dem_1m/tiles',
p = '../data/spatial/processed/dem_1m/geomorphology')
