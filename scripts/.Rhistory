st_union() %>%
st_transform(32613) %>%
st_buffer(16093) %>%
st_transform(4326) %>%
vect()
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs)
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path)
}
DEMcrop('../data/spatial/raw/dem_1arc', domain = domain)
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs)
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path, overwrite=TRUE)
}
DEMcrop('../data/spatial/raw/dem_1arc', domain = domain)
DEMcrop('../data/spatial/raw/dem_3arc', domain = domain)
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
return(paths)
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs)
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path, overwrite = TRUE)
}
DEMcrop('../data/spatial/raw/dem_3arc', domain = domain)
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
if(length(paths) > 1){
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs) } else {
DEMs <- terra::rast(file.path(x, list.files(x, 'tif$')))}
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path, overwrite = TRUE)
}
DEMcrop('../data/spatial/raw/dem_3arc', domain = domain)
DEMcrop('../data/spatial/raw/dem_1-3arc', domain = domain)
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
if(length(paths) > 1){
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs) } else {
DEMs <- terra::rast(file.path(x, list.files(x, 'tif$')))}
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
name(DEms) <- 'elevation'
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path, overwrite = TRUE)
}
DEMcrop('../data/spatial/raw/dem_1arc', domain = domain)
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
if(length(paths) > 1){
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs) } else {
DEMs <- terra::rast(file.path(x, list.files(x, 'tif$')))}
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
name(DEMs) <- 'elevation'
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path, overwrite = TRUE)
}
DEMcrop('../data/spatial/raw/dem_3arc', domain = domain)
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
if(length(paths) > 1){
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs) } else {
DEMs <- terra::rast(file.path(x, list.files(x, 'tif$')))}
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
names(DEMs) <- 'elevation'
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path, overwrite = TRUE)
}
DEMcrop('../data/spatial/raw/dem_3arc', domain = domain)
DEMcrop('../data/spatial/raw/dem_1arc', domain = domain)
DEMcrop('../data/spatial/raw/dem_1-3arc', domain = domain)
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
whitebox::wbt_multiscale_roughness(demIN, output = file.path(p, 'roughness.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(demIN, output = file.path(p, 'Pennock.tif'))
whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_accumulation_curvature(demIN, output = file.path(p, 'accumulation_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(D8pntr, esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
?wbt_multiscale_roughness
?wbt_ruggedness_index
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
whitebox::wbt_multiscale_roughness(demIN,
out_mag = file.path(p, 'roughnes-mag.tif'),
out_scale = file.path(p, 'roughnes-scale.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(demIN, output = file.path(p, 'Pennock.tif'))
whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_accumulation_curvature(demIN, output = file.path(p, 'accumulation_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(D8pntr, esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(demIN, output = file.path(p, 'Pennock.tif'))
whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_accumulation_curvature(demIN, output = file.path(p, 'accumulation_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(D8pntr, esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(demIN, output = file.path(p, 'Pennock.tif'))
#  whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_accumulation_curvature(demIN, output = file.path(p, 'accumulation_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(D8pntr, esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(demIN, output = file.path(p, 'Pennock.tif'))
#  whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_accumulation_curvature(demIN, output = file.path(p, 'accumulation_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
#  whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_accumulation_curvature(demIN, output = file.path(p, 'accumulation_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
#  whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
#  whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_aspect(demIN, output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(demIN, output = file.path(p, 'slope.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
#  whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(demIN, output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(demIN, output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(demIN, output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_maximal_curvature(demIN, output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(demIN, output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_ruggedness_index(demIN, output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(demIN, output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_aspect(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'slope.tif'))
whitebox::wbt_ruggedness_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
# whitebox::wbt_multiscale_roughness(demIN, max_scale = , min_scale = ,
#                                     out_mag = file.path(p, 'roughnes-mag.tif'),
#                                     out_scale = file.path(p, 'roughnes-scale.tif'))
#  whitebox::wbt_compound(demIN, output =  file.path(p, 'cti.tif'))
whitebox::wbt_downslope_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_maximal_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_ruggedness_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_relative_topographic_position(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'RTP.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3arc/dem.tif',
p = '../data/spatial/processed/dem_3arc/geomorphology')
morphoMaker(x = '../data/spatial/processed/dem_1arc/dem.tif',
p = '../data/spatial/processed/dem_1arc/geomorphology')
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_aspect(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'slope.tif'))
whitebox::wbt_ruggedness_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
whitebox::wbt_downslope_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_maximal_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_ruggedness_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_relative_topographic_position(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'RTP.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_1-3arc/dem.tif',
p = '../data/spatial/processed/dem_1-3arc/geomorphology')
library(tidyverse)
library(sf)
library(terra)
# first we will create a domain for all analysis. The 'closest' this bounding box is to a known
# occurrence is 10 miles. The furthest distances vary.
domain <- sf::st_read('../data/collections/occurrences_coloradense/occurrences.shp', quiet = T) %>%
st_union() %>%
st_transform(32613) %>%
st_buffer(16093) %>%
st_transform(4326) %>%
vect()
#' assmeble and crop DEM's' to an area.
#' @param x path to directory contains tifs to combine for final product
#' @param domain vector data which to crop the extent to
DEMcrop <- function(x, domain){
paths <- file.path(x, list.files(x, 'tif$'))
if(length(paths) > 1){
DEMs <- terra::sprc(paths)
DEMs <- terra::mosaic(DEMs) } else {
DEMs <- terra::rast(file.path(x, list.files(x, 'tif$')))}
d <- terra::project(domain, crs(DEMs)) |>
terra::ext()
DEMs <- terra::crop(DEMs, d)
names(DEMs) <- 'elevation'
proj_dem_path <- file.path(
'../data/spatial/processed', basename(x), 'dem.tif')
terra::project(DEMs, "epsg:32613", filename = proj_dem_path, overwrite = TRUE)
}
DEMcrop('../data/spatial/raw/dem_3m', domain = domain)
#' morphoMaker
#' calculate many geomorphological features of a landscape
#' @param x a path to a digital elevation model
#' @param p an output path where all geomorphologic products should be saved.
morphoMaker <- function(x, p){
demIN <- x
dir.create(p)
whitebox::wbt_fill_depressions(demIN, output = file.path(p, 'DEM_filled.tif'))
whitebox::wbt_aspect(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'aspect.tif'))
whitebox::wbt_slope(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'slope.tif'))
whitebox::wbt_ruggedness_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'ruggedness.tif'))
whitebox::wbt_geomorphons(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'geomorphons.tif'))
whitebox::wbt_pennock_landform_class(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'Pennock.tif'))
whitebox::wbt_relative_topographic_position(demIN, output = file.path(p, 'RTP.tif'))
whitebox::wbt_downslope_index(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'DSI.tif'))
whitebox::wbt_profile_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'profile_curv.tif'))
whitebox::wbt_plan_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'plan_curv.tif'))
whitebox::wbt_maximal_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'maximal_curv.tif'))
whitebox::wbt_tangential_curvature(file.path(p, 'DEM_filled.tif'), output = file.path(p, 'tangential_curv.tif'))
whitebox::wbt_d8_pointer(file.path(p, 'DEM_filled.tif'), esri_pntr = F,
output = file.path(p, 'D8pntr.tif'))
whitebox::wbt_basins(file.path(p, 'D8pntr.tif'), esri_pntr = F, output = file.path(p, 'basins.tif'))
}
morphoMaker(x = '../data/spatial/processed/dem_3m/dem.tif',
p = '../data/spatial/processed/dem_3m/geomorphology')
