abline(ci95[,1], col = '#F1BE48')
abline(my_mod)
abline(ci95[,2], col = '#F1BE48')
rm(ci95)
ames$Tot_Size <- ames$Total_Bsmt_SF + ames$Gr_Liv_Area + ames$Garage_Area
my_mod_many_vars <- lm(Sale_Price ~ Gr_Liv_Area * Total_Bsmt_SF * Garage_Area * Year_Remod_Add, data = ames)
many_rsq <- summary(my_mod_many_vars)$r.squared # 0.82
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add,
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
scatterplot3d::scatterplot3d(x = pred_grid$Tot_Size, y = pred_grid$Year_Remod_Add,
z = pred_grid$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
simple_rsq <- summary(my_mod)$r.squared
pred_intervals <- predict(
my_mod,
newdata = pred_grid,
interval = 'prediction', level = 0.95)
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = 'red', lty = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="blue", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="blue", lty=2)
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="blue", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="blue", lty=2)
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
par(bg = 'black')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
par(bg = 'black', par(col.lab="white"))
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
par(bg = 'black', col.lab="white")
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
?par
par(bg = 'black', col ="white")
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
par(bg = 'black', col.axis ="white")
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
par(bg = 'black', col.axis ="white", col.main = 'white')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#CAC7A7',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#CAC7A7',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Predicted Sales Prices')
lines(pred_grid$Gr_Liv_Area, pred_intervals[,1], col = '#C8102E', lty = 2, lwd = 2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,2], col="#F1BE48", lty=2)
lines(pred_grid$Gr_Liv_Area, pred_intervals[,3], col="#F1BE48", lty=2)
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between Sales Price and House Size')
abline(ci95[,1], col = '#F1BE48')
## Confidence intervals
ci95 <- confint(my_mod, level = 0.95)
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between Sales Price and House Size')
abline(ci95[,1], col = '#F1BE48')
abline(my_mod)
abline(ci95[,2], col = '#F1BE48')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#CAC7A7',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between Sales Price and House Size')
abline(ci95[,1], col = '#F1BE48')
abline(my_mod, col = '#C8102E')
abline(ci95[,2], col = '#F1BE48')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
hist(ames$Gr_Liv_Area, xlab = 'Square Feet of Home (Above Ground)',
col = '#F1BE48', border = '#C8102E',
main = 'Size of Homes Sold in Ames Iowa (2006-2010)')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
hist(ames$Sale_Price/1000, xlab = 'Sale Price (USD) in Thousands',
col = '#F1BE48', border = '#C8102E',
main = 'Sale Price of Homes in Ames Iowa (2006-2010)')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
hist(ames$Sale_Price/1000, xlab = 'Sale Price (USD) in Thousands',
col = '#F1BE48', border = '#C8102E',
main = 'Sale Price of Homes in Ames Iowa (2006-2010)')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white', mfrow = c(2, 0))
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white', mfrow = c(1, 2))
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between House Size and Sales Price')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between House Size and Sales Price')
abline(my_mod, col = '#C8102E')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white', mfrow = c(2, 1))
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between House Size and Sales Price')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#524727',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between House Size and Sales Price')
abline(my_mod, col = '#C8102E')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#CAC7A7',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between House Size and Sales Price')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add,
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
?scatterplot3d
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add, color = 'white'
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
?scatterplot3d
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add, color = 'white',
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add, color = 'white',
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white', mfrow = c(1,2))
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add, color = 'white',
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
scatterplot3d::scatterplot3d(x = pred_grid$Tot_Size, y = pred_grid$Year_Remod_Add,
z = pred_grid$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white', mfrow = c(2,1))
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add, color = 'white',
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
scatterplot3d::scatterplot3d(x = pred_grid$Tot_Size, y = pred_grid$Year_Remod_Add, color = 'white'
z = pred_grid$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white', mfrow = c(2,1))
scatterplot3d::scatterplot3d(x = ames$Tot_Size, y = ames$Year_Remod_Add, color = 'white',
z = ames$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
scatterplot3d::scatterplot3d(x = pred_grid$Tot_Size, y = pred_grid$Year_Remod_Add, color = 'white',
z = pred_grid$Overall_Qual, xlab = 'Total House Size\n(Above Ground + Basement + Garage)',
zlab = 'Quality Score', ylab = 'Year Built\n(or of last remodel)')
ames <- AmesHousing::make_ames() |>
sf::st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) |>
sf::st_transform( crs = 26914) %>%
mutate(Longitude = sf::st_coordinates(.)[,1],
Latitude = sf::st_coordinates(.)[,2],
Sales_Price = Sales_Price/1000)
ames <- AmesHousing::make_ames() |>
sf::st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) |>
sf::st_transform( crs = 26914) %>%
mutate(Longitude = sf::st_coordinates(.)[,1],
Latitude = sf::st_coordinates(.)[,2],
Sale_Price = Sale_Price/1000)
ames <- ames[ (ames$Lot_Area) < 25000, ]
pred_grid <- expand.grid(
Overall_Qual = factor(
seq(min(as.numeric(ames$Overall_Qual)), max(as.numeric(ames$Overall_Qual)), length.out = 10)),
Gr_Liv_Area = seq(min(ames$Gr_Liv_Area), max(ames$Gr_Liv_Area), length.out = 10),
Total_Bsmt_SF = seq(min(ames$Total_Bsmt_SF), max(ames$Total_Bsmt_SF), length.out = 10),
Garage_Area = seq(min(ames$Garage_Area, max(ames$Garage_Area)), length.out = 10),
Year_Remod_Add = round(seq(min(ames$Year_Remod_Add), max(ames$Year_Remod_Add), length.out = 10), 0)
)
pred_grid$Tot_Size <- pred_grid$Total_Bsmt_SF + pred_grid$Gr_Liv_Area + pred_grid$Garage_Area
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white')
hist(ames$Sale_Price, xlab = 'Sale Price (USD) in Thousands',
col = '#F1BE48', border = '#C8102E',
main = 'Sale Price of Homes in Ames Iowa (2006-2010)')
my_mod <- lm(Sale_Price ~ Gr_Liv_Area, data = ames)
par(bg = 'black', col.axis ="white", col.main = 'white', col.lab = 'white', mfrow = c(2, 1))
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#CAC7A7',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between House Size and Sales Price')
plot(x = ames$Gr_Liv_Area, y = ames$Sale_Price, col = '#CAC7A7',
ylab = 'Sales Price (Thousands)', xlab = 'Size (in Square Feet)',
main = 'Relationship between House Size and Sales Price')
abline(my_mod, col = '#C8102E')
<center>
![<font size="4">Hitch Plan</font>](../images/HitchPlan.png){height=85%}
(20)2
(20)*2
1.2 * 2
23.37*2
(20)*2
1.2 * 2 + 23.37*2
1.2 * 2 + 23.37*2 / (20)*2
1.2 * 2 + 23.37*2 / (.20)*2
1.2 * 2 + 23.37*2 / (20)*2
(1.2 * 2) + 23.37*2 / (20)*2
(1.2 * 2) + (23.37*2) / (20)*2
(1.2 * 2) + (23.37*2) #/ (20)*2
(1.2) + (23.37 * 2) #/ (20)*2
(1.2) + (23.37 * 2) / (20)*2
3800*0.2
3800*0.3
3800 - 1200
library(tidyverse)
library(sf)
inat <- read.csv('../data/collections/iNaturalistObservations/observations-417874.csv') %>%
filter(positional_accuracy <= 10) %>%
st_as_sf(coords = c('longitude', 'latitude'), crs = 4326) %>%
select(id, observed_on, user_login, quality_grade)
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
library(tidyverse)
library(sf)
inat <- read.csv('../data/collections/iNaturalistObservations/observations-417874.csv') %>%
filter(positional_accuracy <= 10) %>%
st_as_sf(coords = c('longitude', 'latitude'), crs = 4326) %>%
select(id, observed_on, user_login, quality_grade)
setwd('/home/sagesteppe/Documents/assoRted/EriogonumColoradenseTaxonomy/scripts')
setwd('~/Documents/assoRted/EriogonumColoradenseTaxonomy/scripts')
inat <- read.csv('../data/collections/iNaturalistObservations/observations-417874.csv') %>%
filter(positional_accuracy <= 10) %>%
st_as_sf(coords = c('longitude', 'latitude'), crs = 4326) %>%
select(id, observed_on, user_login, quality_grade)
soro <- readr::read_csv('../data/collections/SoroSymbiota/occurrences.csv', show_col_types = FALSE) %>%
drop_na(decimalLatitude, decimalLongitude) %>%
st_as_sf(coords = c('decimalLongitude', 'decimalLatitude'), crs = 4326) %>%
select(georeferenceRemarks, georeferencedBy,locality, eventDate, recordedBy,
identifiedBy, identificationRemarks, catalogNumber)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076163', '3076165', 'RMBL004279')
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076163', '3076165', 'RMBL004279')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
View(soro)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp')
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
View(soro)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165', 'RMBL004279')
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165', 'RMBL004279')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165',
'RMBL004279', 'ASU0121771')
Soro_pts_remove
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165',
'RMBL004279', 'ASU0121771')
View(soro)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165',
'RMBL004279', 'ASU0121771')
warnings()
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165',
'RMBL004279', 'ASU0121771')
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165',
'RMBL004279', 'ASU0121771')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
View(soro)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
rm(inat, soro, Soro_pts_remove)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165',
'RMBL004279', 'ASU0121771', '3076166')
library(tidyverse)
library(sf)
setwd('~/Documents/assoRted/EriogonumColoradenseTaxonomy/scripts')
inat <- read.csv('../data/collections/iNaturalistObservations/observations-417874.csv') %>%
filter(positional_accuracy <= 10) %>%
st_as_sf(coords = c('longitude', 'latitude'), crs = 4326) %>%
select(id, observed_on, user_login, quality_grade)
soro <- readr::read_csv('../data/collections/SoroSymbiota/occurrences.csv', show_col_types = FALSE) %>%
drop_na(decimalLatitude, decimalLongitude) %>%
st_as_sf(coords = c('decimalLongitude', 'decimalLatitude'), crs = 4326) %>%
select(georeferenceRemarks, georeferencedBy,locality, eventDate, recordedBy,
identifiedBy, identificationRemarks, catalogNumber)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076162', '3076165',
'RMBL004279', 'ASU0121771', '3076166')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
View(soro)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', 'khd00039107', '3076163', '3076165',
'RMBL004279', 'ASU0121771', '3076166')
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD0057673', '48427',
'102217', 'khd00039107', '3076163', '3076165',
'RMBL004279', 'ASU0121771', '3076166')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
View(soro)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
View(soro)
View(inat)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
#%>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
oc <-bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
)
View(oc)
View(soro)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD0057673', '48427',
'102217', 'khd00039107', '3076163', '3076165',
'RMBL004279', 'ASU0121771', '3076166', '48630')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
oc <-bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
)
View(oc)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD0057673', '48427',
'102217', 'khd00039107', '3076163', '3076165',
'RMBL004279', 'ASU0121771', '3076166', '48360')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
oc <-bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
View(soro)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD0057673', '48427',
'102217', '3076163', '3076165',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD0057673', '48427',
'102217', '3076163', '3076165',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
library(tidyverse)
library(sf)
setwd('~/Documents/assoRted/EriogonumColoradenseTaxonomy/scripts')
inat <- read.csv('../data/collections/iNaturalistObservations/observations-417874.csv') %>%
filter(positional_accuracy <= 10) %>%
st_as_sf(coords = c('longitude', 'latitude'), crs = 4326) %>%
select(id, observed_on, user_login, quality_grade)
soro <- readr::read_csv('../data/collections/SoroSymbiota/occurrences.csv', show_col_types = FALSE) %>%
drop_na(decimalLatitude, decimalLongitude) %>%
st_as_sf(coords = c('decimalLongitude', 'decimalLatitude'), crs = 4326) %>%
select(georeferenceRemarks, georeferencedBy,locality, eventDate, recordedBy,
identifiedBy, identificationRemarks, catalogNumber)
st_write(inat, '../data/collections/manual_cleaning_geodata/inat.shp')
library(tidyverse)
library(sf)
setwd('~/Documents/assoRted/EriogonumColoradenseTaxonomy/scripts')
inat <- read.csv('../data/collections/iNaturalistObservations/observations-417874.csv') %>%
filter(positional_accuracy <= 10) %>%
st_as_sf(coords = c('longitude', 'latitude'), crs = 4326) %>%
select(id, observed_on, user_login, quality_grade)
soro <- readr::read_csv('../data/collections/SoroSymbiota/occurrences.csv', show_col_types = FALSE) %>%
drop_na(decimalLatitude, decimalLongitude) %>%
st_as_sf(coords = c('decimalLongitude', 'decimalLatitude'), crs = 4326) %>%
select(georeferenceRemarks, georeferencedBy,locality, eventDate, recordedBy,
identifiedBy, identificationRemarks, catalogNumber)
st_write(inat, '../data/collections/manual_cleaning_geodata/inat.shp', append = F)
st_write(soro, '../data/collections/manual_cleaning_geodata/soro.shp', append = F)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD0057673', '48427',
'102217', '3076163', '3076165',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
View(soro)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', '3076163', '3076165', '3076162',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', '3076163', '3076165', '3076162', '719290',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
warnings()
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427',
'102217', '3076163', '3076165', '3076162', '719290',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427', 'RMBL0004279',
'102217', '3076163', '3076165', '3076162', '719290',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427', 'RMBL0004279',
'102217', '3076163', '3076165', '3076162', '719290',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
Soro_pts_remove <- c('WSC0003417', '109996', 'KHD00057673', '48427', 'RMBL0004279',
'102217', '3076163', '3076165', '3076162', '719290', 'KHD00074171',
'RMBL004279', 'ASU0121771', '3076166', '48360', 'KHD00039107')
soro <- filter(soro, ! catalogNumber %in% Soro_pts_remove)
bind_rows(
select(soro, eventDate) ,
select(inat, eventDate = observed_on) %>%
mutate(eventDate = as.Date(eventDate))
) %>%
st_write('../data/collections/occurrences/occurrences.shp', append = F)
rm(inat, soro, Soro_pts_remove)
